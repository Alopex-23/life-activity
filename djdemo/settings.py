"""
Django settings for djdemo project.

Generated by 'django-admin startproject' using Django 3.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
#路径操作类，python3.6版本新增
from pathlib import Path
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  #此时，BASE_DIR代表的就是当前的就是当前项目的根目录
#__file__ 获取当前文件的路径
#Path(__file__) 基于当前文件所在路径转换成路径操作对象
#Path(__file__).resolve()  路径转换，转换成当前操作系统所能识别的正确路径
#Path(__file__).resolve().parent   获取父级路径


sys.path.insert(0,os.path.join(BASE_DIR,'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#密钥，用于对数据进行加密的时候的一个随机字符串，可以让项目中数据在加密变得更加安全。
SECRET_KEY = 'django-insecure-8n#k)3x0l&nt+&=z3l3%j^40wgf=ygn1(2zhf)=$p^8e#bn1!v'
# SESSION_COOKIE_AGE = 604800
# MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
#子应用的定义列表[项目当中，我们所有的子应用都要注册到当前这个列表中]
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'web',
    'mycelery',
    'life',
]
#中间件,全局的钩子，django在接收请求和响应数据都会自动的执行一遍这里的代码。
MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware', #实际工作中，我们往往采用web服务器来实现gzip压缩
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'djdemo.my_middleware.user_source_middleware',  #注册自己的中间件[不管是函数式中间件还是类中间件都是这样注册的]//包括了类中间件
    # 'django.my_middleware.ExceptionMW',
]

#总路由所在的导包路径
ROOT_URLCONF = 'djdemo.urls'

#模板引擎配置
TEMPLATES = [
    {
        #默认模板引擎类
        #'django.template.backends.jinja2.Jinja2'     jinja模板引擎
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  #DTL模板引擎
        #模板目录列表
        'DIRS': [
            BASE_DIR/'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#web应用程序所在导包路径
WSGI_APPLICATION = 'djdemo.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# #数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'digitallife',
        'USER':'root',
        'PASSWORD':'Acky16140563.',
        'HOST':'localhost',
        'POST':'3306',
        # 'POOL_OPTIONS':{        #数据库连接池配置
        #     'POOL_SIZE': 10,    #默认情况下，打开的数据库连接的数量
        #     'MAX_OVERFLOW': 10  #负载情况下，允许溢出的连接数量
        # }
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

#密码验证器
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
#本地化国际化配置
LANGUAGE_CODE = 'zh-hans' #zh-hans改为汉语
#服务端时区配置
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

#是否启用时区转换功能,如该值为False则django会基于TIME_ZONE的时区来转换时间，否则，则采用基于系统时间来转换时区
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
#静态资源文件的默认访问url地址前缀
STATIC_URL = '/static/'
STATICFILES_DIRS = ( os.path.join(BASE_DIR,'static/'), )

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
#数据库默认请况下，主键ID的数据类型
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#session会话的引擎类[驱动类]
SESSION_ENGINE = "django.contrib.sessions.backends.file"
#SESSION_ENGINE = "django.contrib.sessions.backends.db     需要配置数据库连接

#session存储目录,注意目录要提前手动创建
SESSION_FILE_PATH = BASE_DIR / "session_path"

# #数据库缓存设置，需要手动执行创建表的命令(my_cache_table)
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         'LOCATION': 'my_cache_table',
#         'TIMEOUT': 300,  # 缓存保存时间 单位秒，默认值为300
#         'OPTIONS': {
#             'MAX_ENTRIES': 300,  # 缓存最大数据条数
#             'CYLL_FREQUENCY': 2,  # 缓存条数达到最大值时，删除1/x的缓存数据
#         }
#     }
# }
CACHES={
    'default':{
        'BACKEND':'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION':'unique-snowflake',
    }
}
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         # 指定缓存路径
#         'LOCATION': '/djdemo/zip',
#     }
# }

#用户系统的校验失败后定向的位置
# LOGIN_URL=''

# 邮件相关配置
EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST='smtp.qq.com' #腾讯QQ邮箱SMTP服务器地址
EMAIL_PORT=25 #SMTP服务的端口号
EMAIL_HOST_USER='3052573970@qq.com' #发送邮件的QQ邮箱
EMAIL_HOST_PASSWORD='rltajwonsbvrddgf' #在QQ邮箱->设置->账户->"POP3/IMAP...服务"里得到的在第三方登录QQ邮箱授权码
EMAIL_USE_TLS=False #与SMTP服务器通信时，是否启动TLS链接(安全链接)默认False

# CRONJOBS = [
#     ('*/1 * * * *', 'web.crontabs.check', ' >>/home/dreamcreator/djdemo/web/crontab.log'),
# ]


AUTH_USER_MODEL='life.UserInfo'
LOGIN_URL='/life/index/'

# STATIC_ROOT='/home/dreamcreator/djdemo/djdemo_static/static'

# CELERY_BROKER_URL = "redis://127.0.0.1:6379/1"
# CELERY_RESULT_BACKEND = "redis://127.0.0.1:6379/2"
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_IMPORTS=("mycelery.task")
# ans=0
CITY_DB='/home/dreamcreator/djdemo/GeoLite2-City.mmdb'